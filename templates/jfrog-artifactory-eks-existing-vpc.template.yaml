AWSTemplateFormatVersion: '2010-09-09'
Description: Deploys an EKS cluster with JFrog Artifactory into an existing VPC (qs-1q037efm3).
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Security configuration
        Parameters:
          - KeyPairName
          - AccessCidr
          - RemoteAccessCidr
          - AdditionalEKSAdminUserArn
          - AdditionalEKSAdminRoleArn
      - Label:
          default: Network configuration
        Parameters:
          - VpcId
          - VpcCidr
          - PrivateSubnet1Id
          - PrivateSubnet2Id
          - PrivateSubnet3Id
          - PublicSubnet1Id
          - PublicSubnet2Id
          - PublicSubnet3Id
          - PrivateSubnet1Cidr
          - PrivateSubnet2Cidr
          - PrivateSubnet3Cidr
      - Label:
          default: Bastion configuration
        Parameters:
          - ProvisionBastionHost
          - BastionInstanceType
          - BastionOs
          - BastionRootVolumeSize
          - BastionEnableTcpForwarding
          - BastionEnableX11Forwarding
      - Label:
          default: JFrog Artifactory configuration
        Parameters:
          - ArtifactoryProduct
          - ArtifactoryVersion
          - ReleaseStage
          - DefaultDeploymentSize
          - ArtifactoryDeploymentSize
          - NumberOfSecondary
          - SmLicenseCertName
          - MasterKey
      - Label:
          default: Amazon RDS configuration
        Parameters:
          - DatabaseName
          - DatabaseEngine
          - DatabaseUser
          - DatabasePassword
          - DatabaseInstance
          - DatabaseAllocatedStorage
          - MultiAzDatabase
      - Label:
          default: EC2/EKS configuration
        Parameters:
          - KubernetesVersion
          - NodeInstanceType
          - NumofSecondaryNodes
          - NodeVolumeSize
      - Label:
          default: AWS Quick Start configuration
        Parameters:
          - QsS3BucketName
          - QsS3KeyPrefix
          - QsS3BucketRegion
          - LambdaZipsBucketName
    ParameterLabels:
      KeyPairName:
        default: SSH key name
      AccessCidr:
        default: Permitted IP range
      RemoteAccessCidr:
        default: Remote access CIDR
      AdditionalEKSAdminUserArn:
        default: Additional EKS admin ARNs
      AdditionalEKSAdminRoleArn:
        default: Additional EKS admin ARNs
      VpcId:
        default: VPC ID
      VpcCidr:
        default: VPC CIDR
      PublicSubnet1Id:
        default: Public subnet 1 ID
      PublicSubnet2Id:
        default: Public subnet 2 ID
      PublicSubnet3Id:
        default: Public subnet 3 ID
      PrivateSubnet1Id:
        default: Private subnet 1 ID
      PrivateSubnet2Id:
        default: Private subnet 2 ID
      PrivateSubnet3Id:
        default: Private subnet 3 ID
      PrivateSubnet1Cidr:
        default: Private subnet 1 CIDR
      PrivateSubnet2Cidr:
        default: Private subnet 2 CIDR
      PrivateSubnet3Cidr:
        default: Private subnet 3 CIDR
      ProvisionBastionHost:
        default: Bastion instance
      BastionInstanceType:
        default: Bastion instance type
      BastionRootVolumeSize:
        default: Bastion root volume size
      BastionEnableTcpForwarding:
        default: Bastion enable TCP forwarding
      BastionEnableX11Forwarding:
        default: Bastion enable X11 forwarding
      BastionOs:
        default: Bastion operating system
      ArtifactoryProduct:
        default: Artifactory product to install
      ArtifactoryVersion:
        default: Artifactory version
      ReleaseStage:
        default: Release stage of the product to deploy
      DefaultDeploymentSize:
        default: Default Artifactory deployment size
      ArtifactoryDeploymentSize:
        default: Artifactory deployment size
      NumberOfSecondary:
        default: Number of secondary pods
      SmLicenseCertName:
        default: Artifactory licenses and certificate secret name
      MasterKey:
        default: Master server key
      DatabaseName:
        default: Database name
      DatabaseEngine:
        default: Database engine
      DatabaseUser:
        default: Database user
      DatabasePassword:
        default: Database password
      DatabaseInstance:
        default: Database instance type
      DatabaseAllocatedStorage:
        default: Database allocated storage
      MultiAzDatabase:
        default: High available database
      NodeInstanceType:
        default: Node instance type
      NodeVolumeSize:
        default: Node EBS volume size
      NumofSecondaryNodes:
        default: Number of secondary nodes
      KubernetesVersion:
        default: Kubernetes version
      QsS3BucketName:
        default: Quick Start S3 bucket name
      QsS3KeyPrefix:
        default: Quick Start S3 key prefix
      QsS3BucketRegion:
        default: Quick Start S3 bucket region
      LambdaZipsBucketName:
        default: Lambda zips bucket name
Parameters:
  KeyPairName:
    Description: The name of an existing public/private key pair, which allows you
      to securely connect to your instance after it launches.
    Type: AWS::EC2::KeyPair::KeyName
  AccessCidr:
    Description: The CIDR IP range that is permitted to access Artifactory.
      We recommend that you set this value to a trusted IP range.
      For example, you might want to grant only your corporate network access to the software.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Type: String
  RemoteAccessCidr:
    Description:
      The remote CIDR range for allowing SSH into the Bastion instance.
      We recommend that you set this value to a trusted IP range.
      For example, you might want to grant specific ranges inside your corporate network SSH access.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Type: String
  AdditionalEKSAdminUserArn:
    Description: '[OPTIONAL] The Amazon Resource Names (ARNs): a comma-separated list of IAM users to be granted admin access to the EKS cluster.'
    Default: ""
    Type: CommaDelimitedList
  AdditionalEKSAdminRoleArn:
    Description: '[OPTIONAL] The Amazon Resource Names (ARNs): a comma-separated list of IAM roles to be granted admin access to the EKS cluster.'
    Default: ""
    Type: CommaDelimitedList
  VpcId:
    Description: The ID of your existing VPC for deployment (e.g., vpc-0343606e).
    Type: AWS::EC2::VPC::Id
  VpcCidr:
    Description: The CIDR block for the VPC.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16
    Type: String
  PublicSubnet1Id:
    Description: The ID of the public subnet in Availability Zone 1 in your existing VPC (e.g., subnet-z0376dab).
    Type: "AWS::EC2::Subnet::Id"
  PublicSubnet2Id:
    Description: The ID of the public subnet in Availability Zone 2 in your existing VPC (e.g., subnet-a29c3d84).
    Type: "AWS::EC2::Subnet::Id"
  PublicSubnet3Id:
    Description: The ID of the public subnet in Availability Zone 3 in your existing VPC (e.g., subnet-a29c3d84).
    Type: "AWS::EC2::Subnet::Id"
  PrivateSubnet1Id:
    Description: The ID of the private subnet in Availability Zone 1 in your existing VPC (e.g., subnet-a0246dcd).
    Type: "AWS::EC2::Subnet::Id"
  PrivateSubnet2Id:
    Description: The ID of the private subnet in Availability Zone 2 in your existing VPC (e.g., subnet-b58c3d67).
    Type: "AWS::EC2::Subnet::Id"
  PrivateSubnet3Id:
    Description: The ID of the private subnet in Availability Zone 3 in your existing VPC (e.g., subnet-b58c3d67).
    Type: "AWS::EC2::Subnet::Id"
  PrivateSubnet1Cidr:
    Description: The CIDR of the private subnet in Availability Zone 1 in your existing VPC (e.g., 10.0.0.0/19).
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/19
    Type: String
  PrivateSubnet2Cidr:
    Description: The CIDR of the private subnet in Availability Zone 2 in your existing VPC (e.g., 10.0.32.0/19).
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.32.0/19
    Type: String
  PrivateSubnet3Cidr:
    Description: The CIDR block for private subnet 3 located in Availability Zone 3 in your existing VPC (e.g., 10.0.64.0/19).
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.64.0/19
    Type: String
  NodeInstanceType:
    Description: The Amazon EC2 instance type for the nodes hosting the Kubernetes pods.
    AllowedValues:
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
    ConstraintDescription: Must be a valid EC2 instance type
    Default: m5.xlarge
    Type: String
  NodeVolumeSize:
    Description: The size of EBS volumes for master node instances, in GB.
    Default: 200
    Type: String
  NumofSecondaryNodes:
    Description: The initial number of secondary node instances to create.
      If you do not have large enough instances to boot the number of secondary pods, the deployment will fail.
    AllowedValues:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
    Default: 2
    Type: Number
  KubernetesVersion:
    Description: The Kubernetes control plane version.
    AllowedValues: ["1.14", "1.13", "1.12"]
    Default: "1.14"
    Type: String
  ProvisionBastionHost:
    Description: Choose Disabled to skip creating a bastion instance. Due to the Artifactory nodes being
      created in private subnets, the default setting of Enabled this is highly recommended.
    AllowedValues:
      - "Enabled"
      - "Disabled"
    Default: "Enabled"
    Type: String
  BastionInstanceType:
    Description: The size of the bastion instances.
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
    Default: "t2.micro"
    Type: String
  BastionRootVolumeSize:
    Description: The size of the root volume on the bastion instances.
    Default: 10
    Type: Number
  BastionEnableTcpForwarding:
    Description: Choose whether to enable TCPForwarding via the bootstrapping of the bastion instance
      or not.
    AllowedValues:
      - "true"
      - "false"
    Default: "true"
    Type: String
  BastionEnableX11Forwarding:
    Description: Choose true to enable X11 via the bootstrapping of the bastion host.
      Setting this value to true will enable X Windows over SSH.
      X11 forwarding can be very useful but it is also a security risk, so we recommend
      that you keep the default (false) setting unless required.
    AllowedValues:
      - "true"
      - "false"
    Default: "false"
    Type: String
  BastionOs:
    Description: The Linux distribution for the Amazon Machine Image (AMI) to be used for the bastion instances.
    AllowedValues:
      - "Amazon-Linux-HVM"
      - "CentOS-7-HVM"
      - "Ubuntu-Server-14.04-LTS-HVM"
      - "Ubuntu-Server-16.04-LTS-HVM"
      - "SUSE-SLES-15-HVM"
    Default: "Amazon-Linux-HVM"
    Type: String
  NumberOfSecondary:
    Description: Number of secondary Artifactory pods to complete your HA deployment.
      Minimum number of 2 to fit the Artifactory best practices. Do not select more than
      you license for. If you are doing a JFrog Container Registry Deployment, this will
      create the number of underlying nodes and NGINX containers.
    AllowedValues:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
    Default: 2
    Type: Number
  ArtifactoryProduct:
    Description: The Jfrog Artifactory product you wish to install.
    AllowedValues:
      - JFrog-Artifactory-Pro
      - JFrog-Container-Registry
    Default: JFrog-Artifactory-Pro
    Type: String
  ArtifactoryVersion:
    Description: The version of Artifactory that you want to deploy into the Quick Start.
      Please see the release notes to select the version you want to deploy.
      https://www.jfrog.com/confluence/display/RTF/Release+Notes
    AllowedPattern: ^(([0-9]|[1-9][0-9])\.){2}([1-9][0-9]|[0-9])$
    ConstraintDescription: A version that matches X.X.X per Artifactory releases.
    Default: 7.2.1
    Type: String
  ReleaseStage:
    Description: Whether to use the upstream repository that is pre-GA.
    AllowedValues:
      - "GA"
      - "BETA"
    Default: "GA"
    Type: String
  DefaultDeploymentSize:
    Description: Choose false to overwrite the standard calculations of memory options to pass Java Options for the deployment
      If overwriting them, not to over provision the nodes.
    ConstraintDescription: True or False
    AllowedValues:
      - "true"
      - "false"
    Default: "true"
    Type: String
  ArtifactoryDeploymentSize:
    Description: Configuration settings implemented by the Helm chart. There are currently eight supported sizes. This value is only
      taken into account if you choose 'false' for DefaultDeploymentSize.
      'xxxLarge:' Only applicable to node InstanceType m5.24xlarge or larger - Memory request of 240 GiB, memory limit of 384GiB; CPU request of 64, CPU limit of 96; Java heap size minimum of 192 GB, maximum of 288 GB.
      'xxLarge:' Only applicable to node InstanceType m5.16xlarge or larger - Memory request of 160 GiB, memory limit of 256GiB; CPU request of 48, CPU limit of 64; Java heap size minimum of 128 GB, maximum of 192 GB.
      'xLarge:' Only applicable to node InstanceType m5.12xlarge or larger - Memory request of 120 GiB, memory limit of 192GiB; CPU request of 32, CPU limit of 48; Java heap size minimum of 96 GB, maximum of 144 GB.
      'Large:' Only applicable to node InstanceType m5.8xlarge or larger - Memory request of 80 GiB, memory limit of 128GiB; CPU request of 16, CPU limit of 32; Java heap size minimum of 64 GB, maximum of 96 GB.
      'Medium:' Only applicable to node InstanceType m5.4xlarge or larger - Memory request of 42 GiB, memory limit of 64 GiB; CPU request of 8, CPU limit of 16; Java heap size minimum of 32 GB, maximum of 48 GB.
      'Small:' Only applicable to node InstanceType m5.2xlarge or larger - Memory request of 20 GiB, memory limit of 32 GiB; CPU request of 4, CPU limit of 8; Java heap size minimum of 16 GB, maximum of 24 GB.
      'xSmall:' Only applicable to node InstanceType m5.xlarge or larger - Memory request of 6 GiB, memory limit of 16 GiB; CPU request of 2, CPU limit of 4; Java heap size minimum of 8 GB, maximum of 12 GB.
      'xxSmall:' Applicable to all node Instance Types - Memory request of 4 GiB, memory limit of 6 GiB; CPU request of 2, CPU limit of 2; Java heap size of 4 GB.
    AllowedValues:
      - xxSmall
      - xSmall
      - Small
      - Medium
      - Large
      - xLarge
      - xxLarge
      - xxxLarge
    Default: xSmall
    Type: String
  SmLicenseCertName:
    Description: The secret name created in AWS Secrets Manager which contains the SSL certificate, certificate key, and Artifactory licenses.
    Type: String
  MasterKey:
    Description: The master key for the Artifactory cluster. Generate a master key by using the command '$openssl rand -hex 16'.
    AllowedPattern: ^[a-zA-Z0-9]+$
    MinLength: '1'
    MaxLength: '64'
    ConstraintDescription: Only capital or lowercase letters and numbers, with a Max of 64 characters.
    NoEcho: 'true'
    Type: String
  DatabaseName:
    Description: The name for your Database instance. The name must be unique across all Database instances
      owned by your AWS account in the current AWS Region. The Database instance identifier is case-insensitive,
      but is stored as all lowercase (as in "mydbinstance").
    AllowedPattern: ^[a-zA-Z]([a-zA-Z0-9])+$
    MinLength: '1'
    MaxLength: '60'
    ConstraintDescription: 1 to 60 alphanumeric characters First character must be a letter.
    Default: artdb
    Type: String
  DatabaseEngine:
    Description: The database engine that you want to run, currently locked to MySQL.
    AllowedValues:
      - MySQL
      - Postgres
    Default: Postgres
    Type: String
  DatabaseUser:
    Description: The login ID for the master user of your Database instance.
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: ^[a-zA-Z]([a-zA-Z0-9])+$
    ConstraintDescription: 1 to 16 alphanumeric characters. First character must be a letter
    Default: artifactory
    Type: String
  DatabasePassword:
    Description: The password for the Artifactory database user.
    AllowedPattern: ^[^ \\']+$
    MinLength: '8'
    MaxLength: '12'
    ConstraintDescription: Must be at least 8 and no more than
      12 characters containing letters and (minimum 1 capital letter), numbers and
      symbols.
    NoEcho: 'true'
    Type: String
  DatabaseInstance:
    Description: The size of the database to be deployed as part of the Quick Start.
    AllowedValues:
      - db.m3.medium
      - db.m3.large
      - db.m3.xlarge
      - db.m3.2xlarge
      - db.m4.large
      - db.m4.xlarge
      - db.m4.2xlarge
      - db.m4.10xlarge
      - db.m4.16xlarge
      - db.m5.large
      - db.m5.xlarge
      - db.m5.2xlarge
      - db.m5.4xlarge
      - db.m5.12xlarge
      - db.m5.24xlarge
    ConstraintDescription: Must be a valid database Instance Type.
    Default: db.m4.large
    Type: String
  DatabaseAllocatedStorage:
    Description: The size in GB of the available storage for the database instance.
    MinValue: 5
    MaxValue: 1024
    Default: 10
    Type: Number
  MultiAzDatabase:
    Description: Choose false to create an Amazon RDS instance in a single Availability Zone.
    ConstraintDescription: True or False
    AllowedValues:
      - "true"
      - "false"
    Default: "true"
    Type: String
  QsS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription:
      Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description:
      S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    Type: String
  QsS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription:
      Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-jfrog-artifactory/
    Description:
      S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
  QsS3BucketRegion:
    Default: 'us-east-1'
    Description: The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value.
    Type: String
  LambdaZipsBucketName:
    Description: '[OPTIONAL] The name of the S3 bucket where the Lambda .zip
      files should be placed. If you leave this parameter blank, an S3 bucket will be created.'
    Default: ''
    Type: String
Rules:
  EKSSupport:
    Assertions:
      - AssertDescription: Your AWS Region does *NOT* yet support Amazon EKS
        Assert: !Contains
          -  - us-west-2
             - us-east-1
             - us-east-2
             - eu-west-1
             - eu-west-2
             - eu-west-3
             - eu-north-1
             - eu-central-1
             - ap-southeast-1
             - ap-southeast-2
             - ap-northeast-1
             - ap-northeast-2
             - ap-south-1
          - !Ref 'AWS::Region'
Conditions:
  ArtifactoryHa: !Equals [!Ref ArtifactoryProduct, 'JFrog-Artifactory-Pro']
  BastionSecurityGroup: !And [!Equals [!Ref ArtifactoryProduct, 'JFrog-Artifactory-Pro'], !Equals [!Ref 'ProvisionBastionHost', 'Enabled']]
  DefaultSize: !Equals [!Ref DefaultDeploymentSize, "true"]
  UsingDefaultBucket: !Equals [!Ref QsS3BucketName, 'aws-quickstart']
Resources:
  EksStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QsS3KeyPrefix}submodules/quickstart-amazon-eks/templates/amazon-eks.template.yaml
        - S3Bucket: !If [UsingDefaultBucket, !Sub '${QsS3BucketName}-${AWS::Region}', !Ref 'QsS3BucketName']
          S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref 'QsS3BucketRegion']
      Parameters:
        KeyPairName: !Ref KeyPairName
        RemoteAccessCIDR: !Ref RemoteAccessCidr
        AdditionalEKSAdminUserArn: !Join [",", !Ref AdditionalEKSAdminUserArn]
        AdditionalEKSAdminRoleArn: !Join [",", !Ref AdditionalEKSAdminRoleArn]
        VPCID: !Ref VpcId
        PrivateSubnet1ID: !Ref PrivateSubnet1Id
        PrivateSubnet2ID: !Ref PrivateSubnet2Id
        PrivateSubnet3ID: !Ref PrivateSubnet3Id
        PublicSubnet1ID: !Ref PublicSubnet1Id
        PublicSubnet2ID: !Ref PublicSubnet2Id
        PublicSubnet3ID: !Ref PublicSubnet3Id
        KubernetesVersion: !Ref KubernetesVersion
        NodeInstanceType: !Ref NodeInstanceType
        NumberOfNodes: !If [ArtifactoryHa, '1', !Ref NumberOfSecondary]
        NodeGroupName: !Sub ${ArtifactoryProduct}
        NodeVolumeSize: !Ref NodeVolumeSize
        BootstrapArguments: !Sub "--kubelet-extra-args '--node-labels=partition=${ArtifactoryProduct}'"
        ProvisionBastionHost: !Ref ProvisionBastionHost
        BastionInstanceType: !Ref BastionInstanceType
        BastionOS: !Ref BastionOs
        BastionRootVolumeSize: !Ref BastionRootVolumeSize
        BastionEnableTCPForwarding: !Ref BastionEnableTcpForwarding
        BastionEnableX11Forwarding: !Ref BastionEnableX11Forwarding
        QSS3BucketName: !Ref QsS3BucketName
        QSS3KeyPrefix: !Sub "${QsS3KeyPrefix}submodules/quickstart-amazon-eks/"
        QSS3BucketRegion: !Ref QsS3BucketRegion
        LambdaZipsBucketName: !Ref LambdaZipsBucketName

  ArtifactorySecondaryNodesStack:
    Condition: ArtifactoryHa
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QsS3KeyPrefix}submodules/quickstart-amazon-eks/templates/amazon-eks-nodegroup.template.yaml
        - S3Bucket: !If [UsingDefaultBucket, !Sub '${QsS3BucketName}-${AWS::Region}', !Ref 'QsS3BucketName']
          S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref 'QsS3BucketRegion']
      Parameters:
        KeyPairName: !Ref KeyPairName
        PrivateSubnet1ID: !Ref PrivateSubnet1Id
        PrivateSubnet2ID: !Ref PrivateSubnet2Id
        PrivateSubnet3ID: !Ref PrivateSubnet3Id
        VPCID: !Ref VpcId
        NodeInstanceType: !Ref NodeInstanceType
        NumberOfNodes: !Ref NumofSecondaryNodes
        NodeGroupName: !Sub "${ArtifactoryProduct}-secondary"
        NodeVolumeSize: !Ref NodeVolumeSize
        EKSControlPlane: !GetAtt EksStack.Outputs.EKSClusterName
        ControlPlaneSecurityGroup: !GetAtt EksStack.Outputs.ControlPlaneSecurityGroup
        NodeInstanceProfile: !GetAtt EksStack.Outputs.NodeInstanceProfile
        NodeInstanceRoleName: !GetAtt EksStack.Outputs.NodeInstanceRoleName
        NodeInstanceRoleArn: !GetAtt EksStack.Outputs.NodeInstanceRoleArn
        KubernetesVersion: !Ref KubernetesVersion
        BootstrapArguments: !Sub "--kubelet-extra-args '--node-labels=partition=${ArtifactoryProduct}-secondary'"

  # Allow the bastion host to SSH into the secondary node pools
  BastionToRegularIngress:
    Condition: BastionSecurityGroup
    Type: "AWS::EC2::SecurityGroupIngress"
    Properties:
      Description: Allow SSH from Bastion server to Regular Nodes
      GroupId: !GetAtt ArtifactorySecondaryNodesStack.Outputs.EKSNodeSecurityGroup
      SourceSecurityGroupId: !GetAtt EksStack.Outputs.BastionSecurityGroup
      IpProtocol: tcp
      ToPort: 22
      FromPort: 22

  # Allow the secondary node pools to bidirectionally communicate with "initial" (master) nodes
  RegularToMasterIngress:
    Condition: ArtifactoryHa
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allows regular nodes to communicate with master nodes
      GroupId: !GetAtt EksStack.Outputs.NodeGroupSecurityGroup
      SourceSecurityGroupId: !GetAtt ArtifactorySecondaryNodesStack.Outputs.EKSNodeSecurityGroup
      IpProtocol: '-1'
      FromPort: 0
      ToPort: 65535

  MasterToRegularIngress:
    Condition: ArtifactoryHa
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allows master nodes to communicate with regular agent nodes
      GroupId: !GetAtt ArtifactorySecondaryNodesStack.Outputs.EKSNodeSecurityGroup
      SourceSecurityGroupId: !GetAtt EksStack.Outputs.NodeGroupSecurityGroup
      IpProtocol: '-1'
      FromPort: 0
      ToPort: 65535

  ArtifactoryCoreInfraStack:
    DependsOn: EksStack
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QsS3KeyPrefix}templates/jfrog-artifactory-core-infrastructure.template.yaml
        - S3Bucket: !If [UsingDefaultBucket, !Sub '${QsS3BucketName}-${AWS::Region}', !Ref 'QsS3BucketName']
          S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref 'QsS3BucketRegion']
      Parameters:
        VpcId: !Ref VpcId
        VpcCidr: !Ref VpcCidr
        PrivateSubnet1Cidr: !Ref PrivateSubnet1Cidr
        PrivateSubnet2Cidr: !Ref PrivateSubnet2Cidr
        PrivateSubnet3Cidr: !Ref PrivateSubnet3Cidr
        SubnetIds: !Join [",", [!Ref PrivateSubnet1Id, !Ref PrivateSubnet2Id, !Ref PrivateSubnet3Id]]
        DatabaseAllocatedStorage: !Ref DatabaseAllocatedStorage
        MultiAzDatabase: !Ref MultiAzDatabase
        DatabaseEngine: !Ref DatabaseEngine
        DatabaseUser: !Ref DatabaseUser
        DatabasePassword: !Ref DatabasePassword
        DatabaseInstance: !Ref DatabaseInstance
        DatabaseName: !Ref DatabaseName
        ArtifactoryProduct: !Ref ArtifactoryProduct
        ReleaseStage: !Ref ReleaseStage
        InstanceType: !Ref NodeInstanceType

  ArtifactoryCoreStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QsS3KeyPrefix}templates/jfrog-artifactory-eks-core-workload.template.yaml
        - S3Bucket: !If [UsingDefaultBucket, !Sub '${QsS3BucketName}-${AWS::Region}', !Ref 'QsS3BucketName']
          S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref 'QsS3BucketRegion']
      Parameters:
        KubeManifestLambdaArn: !GetAtt EksStack.Outputs.KubeManifestLambdaArn
        HelmLambdaArn: !GetAtt EksStack.Outputs.HelmLambdaArn
        EksClusterName: !GetAtt EksStack.Outputs.EKSClusterName
        KubeGetLambdaArn: !GetAtt EksStack.Outputs.KubeGetLambdaArn
        NumberOfSecondary: !Ref NumberOfSecondary
        AccessCidr: !Ref AccessCidr
        ArtifactoryProduct: !Ref ArtifactoryProduct
        ArtifactoryLicense1: !If [ArtifactoryHa, !Sub '{{resolve:secretsmanager:${SmLicenseCertName}:SecretString:ArtifactoryLicense1}}', '']
        ArtifactoryLicense2: !If [ArtifactoryHa, !Sub '{{resolve:secretsmanager:${SmLicenseCertName}:SecretString:ArtifactoryLicense2}}', '']
        ArtifactoryLicense3: !If [ArtifactoryHa, !Sub '{{resolve:secretsmanager:${SmLicenseCertName}:SecretString:ArtifactoryLicense3}}', '']
        ArtifactoryLicense4: !If [ArtifactoryHa, !Sub '{{resolve:secretsmanager:${SmLicenseCertName}:SecretString:ArtifactoryLicense4}}', '']
        Certificate: !Sub '{{resolve:secretsmanager:${SmLicenseCertName}:SecretString:Certificate}}'
        CertificateKey: !Sub '{{resolve:secretsmanager:${SmLicenseCertName}:SecretString:CertificateKey}}'
        ArtifactoryIamAcessKey: !GetAtt ArtifactoryCoreInfraStack.Outputs.ArtifactoryIamAcessKey
        SecretAccessKey: !GetAtt ArtifactoryCoreInfraStack.Outputs.SecretAccessKey
        ArtifactoryS3Bucket: !GetAtt ArtifactoryCoreInfraStack.Outputs.S3Bucket
        ProDockerRepo: !GetAtt ArtifactoryCoreInfraStack.Outputs.ProDockerRepo
        NginxDockerRepo: !GetAtt ArtifactoryCoreInfraStack.Outputs.NginxDockerRepo
        DatabaseUser: !Ref DatabaseUser
        DatabasePassword: !Ref DatabasePassword
        DatabaseDriver: !GetAtt ArtifactoryCoreInfraStack.Outputs.DatabaseDriver
        DatabasePlugin: !GetAtt ArtifactoryCoreInfraStack.Outputs.DatabasePlugin
        DatabasePluginUrl: !GetAtt ArtifactoryCoreInfraStack.Outputs.DatabasePluginUrl
        DatabaseType: !GetAtt ArtifactoryCoreInfraStack.Outputs.DatabaseType
        DatabaseUrl: !GetAtt ArtifactoryCoreInfraStack.Outputs.DatabaseUrl
        MasterKey: !Ref MasterKey
        ArtifactoryVersion: !Ref ArtifactoryVersion
        ArtifactoryDeploymentSize: !If [DefaultSize, !GetAtt ArtifactoryCoreInfraStack.Outputs.DeploymentSize, !Ref ArtifactoryDeploymentSize]
        ReleaseStage: !Ref ReleaseStage
        QsS3BucketName: !Ref QsS3BucketName
        QsS3KeyPrefix: !Ref QsS3KeyPrefix
        QsS3BucketRegion: !Ref QsS3BucketRegion
Outputs:
  ArtifactoryUrl:
    Value: !GetAtt ArtifactoryCoreStack.Outputs.ArtifactoryUrl
    Description: Public Artifactory URL
  BastionIp:
    Value: !GetAtt EksStack.Outputs.BastionIP
    Description: Bastion host IP, for admin access via SSH
