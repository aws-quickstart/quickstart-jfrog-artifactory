AWSTemplateFormatVersion: '2010-09-09'
Description: 'JFrog Artifactory ECS Quick Start Deployment into an Existing VPC (qs-1q037eflr)'
Metadata:
  # QuickStartDocumentation:
  #   EntrypointName: "Launch into an existing VPC"
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Security configuration
        Parameters:
          - KeyPairName
          - AccessCidr
          - RemoteAccessCidr
      - Label:
          default: Network configuration
        Parameters:
          - VpcId
          - VpcCidr
          - PublicSubnet1Id
          - PublicSubnet2Id
          - PrivateSubnet1Id
          - PrivateSubnet2Id
          - PrivateSubnet1Cidr
          - PrivateSubnet2Cidr
          - ElbScheme
      - Label:
          default: Bastion configuration
        Parameters:
          - ProvisionBastionHost
          - BastionInstanceType
          - BastionOs
          - BastionRootVolumeSize
          - BastionEnableTcpForwarding
          - NumBastionHosts
          - BastionEnableX11Forwarding
      - Label:
          default: ECS configuration
        Parameters:
          - ClusterName
          - CreateNewEcsCluster
          - CreateNewEcsRole
          - RoleName
          - RoleArn
          - InstanceType
          - VolumeSize
          # - EnableFargate
      - Label:
          default: JFrog Artifactory configuration
        Parameters:
          - ArtifactoryProduct
          - ArtifactoryVersion
          - ReleaseStage
          - NumberOfSecondary
          - NumberOfEC2Nodes
          - SmLicenseCertName
          - ArtifactoryServerName
          - MasterKey
          - ExtraJavaOptions
          - DefaultJavaMemSettings
          - AnsibleVaultPass
      - Label:
          default: Amazon RDS configuration
        Parameters:
          - DatabaseName
          - DatabaseEngine
          - DatabaseUser
          - DatabasePassword
          - DatabaseInstance
          - DatabaseAllocatedStorage
          - MultiAzDatabase
      - Label:
          default: AWS Quick Start configuration
        Parameters:
          - QsS3BucketName
          - QsS3KeyPrefix
          - QsS3BucketRegion
    ParameterLabels:
      KeyPairName:
        default: SSH key name
      AccessCidr:
        default: Permitted IP range
      RemoteAccessCidr:
        default: Remote access CIDR
      VpcId:
        default: VPC ID
      VpcCidr:
        default: VPC CIDR
      PublicSubnet1Id:
        default: Public subnet 1 ID
      PublicSubnet2Id:
        default: Public subnet 2 ID
      PrivateSubnet1Id:
        default: Private subnet 1 ID
      PrivateSubnet2Id:
        default: Private subnet 2 ID
      PrivateSubnet1Cidr:
        default: Private subnet 1 CIDR
      PrivateSubnet2Cidr:
        default: Private subnet 2 CIDR
      ElbScheme:
        default: Elastic Load Balancer scheme
      ProvisionBastionHost:
        default: Bastion instance
      BastionInstanceType:
        default: Bastion instance type
      BastionRootVolumeSize:
        default: Bastion root volume size
      BastionEnableTcpForwarding:
        default: Bastion enable TCP forwarding
      BastionEnableX11Forwarding:
        default: Bastion enable X11 forwarding
      BastionOs:
        default: Bastion operating system
      NumBastionHosts:
        default: Bastion instances
      ClusterName:
        default: ECS cluster name
      CreateNewEcsCluster:
        default: Create new ECS cluster
      CreateNewEcsRole:
        default: Create new ECS role
      RoleName:
        default: ECS role name
      RoleArn:
        default: ECS role ARN
      InstanceType:
        default: EC2 instance type
      VolumeSize:
        default: EBS root volume size
      # EnableFargate:
      #   default: Use Fargate with ECS
      ArtifactoryProduct:
        default: Artifactory product to install
      ArtifactoryVersion:
        default: Artifactory version
      ReleaseStage:
        default: Release stage of the product to deploy
      NumberOfSecondary:
        default: Secondary instances
      NumberOfEC2Nodes:
        default: Number of EC2 nodes
      SmLicenseCertName:
        default: Artifactory licenses and certificate secret name
      ArtifactoryServerName:
        default: Artifactory server name
      MasterKey:
        default: Master server key
      ExtraJavaOptions:
        default: Extra Java options
      DefaultJavaMemSettings:
        default: Default Java memory settings
      AnsibleVaultPass:
        default: Ansible vault password
      DatabaseName:
        default: Database name
      DatabaseEngine:
        default: Database engine
      DatabaseUser:
        default: Database user
      DatabasePassword:
        default: Database password
      DatabaseInstance:
        default: Database instance type
      DatabaseAllocatedStorage:
        default: Database allocated storage
      MultiAzDatabase:
        default: High-available database
      QsS3BucketName:
        default: Quick Start S3 bucket name
      QsS3KeyPrefix:
        default: Quick Start S3 key prefix
      QsS3BucketRegion:
        default: Quick Start S3 bucket Region
Parameters:
  KeyPairName:
    Description: Name of an existing key pair, which allows you
      to securely connect to your instance after it launches.
    Type: AWS::EC2::KeyPair::KeyName
  AccessCidr:
    Description: CIDR IP range that is permitted to access Artifactory.
      We recommend that you set this value to a trusted IP range.
      For example, you might want to grant only your corporate network access to the software.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Type: String
  RemoteAccessCidr:
    Description: Remote CIDR range that allows you to connect to the bastion instance by using SSH.
      We recommend that you set this value to a trusted IP range.
      For example, you might want to grant specific ranges inside your corporate network SSH access.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Type: String
  VpcId:
    Description: ID of your existing VPC (e.g., vpc-0343606e).
    Type: "AWS::EC2::VPC::Id"
  VpcCidr:
    Description: CIDR block for the VPC.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16
    Type: String
  PublicSubnet1Id:
    Description: ID of the public subnet in Availability Zone 1 of your existing VPC (e.g., subnet-z0376dab).
    Type: "AWS::EC2::Subnet::Id"
  PublicSubnet2Id:
    Description: ID of the public subnet in Availability Zone 2 of your existing VPC (e.g., subnet-a29c3d84).
    Type: "AWS::EC2::Subnet::Id"
  PrivateSubnet1Id:
    Description: ID of the private subnet in Availability Zone 1 of your existing VPC (e.g., subnet-a0246dcd).
    Type: "AWS::EC2::Subnet::Id"
  PrivateSubnet2Id:
    Description: ID of the private subnet in Availability Zone 2 of your existing VPC (e.g., subnet-b58c3d67).
    Type: "AWS::EC2::Subnet::Id"
  PrivateSubnet1Cidr:
    Description: CIDR of the private subnet in Availability Zone 1 of your existing VPC (e.g., 10.0.0.0/19).
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/19
    Type: String
  PrivateSubnet2Cidr:
    Description: CIDR of the private subnet in Availability Zone 2 of your existing VPC (e.g., 10.0.32.0/19).
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.32.0/19
    Type: String
  ProvisionBastionHost:
    Description: To skip creating a bastion instance, choose Disabled. Because Artifactory nodes are
      created in private subnets, it's highly recommended to set this value to Enabled.
    AllowedValues:
      - "Enabled"
      - "Disabled"
    Default: "Enabled"
    Type: String
  BastionInstanceType:
    Description: Size of the bastion instances.
    AllowedValues:
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
    Default: "t3.micro"
    Type: String
  BastionRootVolumeSize:
    Description: Size of the root volume on the bastion instances.
    Default: 10
    Type: Number
  BastionEnableTcpForwarding:
    Description: Choose whether to enable TCP forwarding via the bootstrapping of the bastion instance.
    AllowedValues:
      - "true"
      - "false"
    Default: "true"
    Type: String
  BastionEnableX11Forwarding:
    Description: Choose true to enable X11 via the bootstrapping of the bastion host.
      Setting this value to true will enable X Windows over SSH.
      X11 forwarding can be useful, but it is also a security risk, so it's recommended
      that you keep the default (false) setting unless required.
    AllowedValues:
      - "true"
      - "false"
    Default: "false"
    Type: String
  BastionOs:
    Description: Linux distribution for the Amazon Machine Image (AMI) to be used for the bastion instances.
    AllowedValues:
      - "Amazon-Linux2-HVM"
      - "CentOS-7-HVM"
      - "Ubuntu-Server-20.04-LTS-HVM"
      - "SUSE-SLES-15-HVM"
    Default: "Amazon-Linux2-HVM"
    Type: String
  NumBastionHosts:
    Description: Number of bastion instances to create.
    AllowedValues:
      - '1'
      - '2'
      - '3'
      - '4'
    Default: '1'
    Type: String
  ClusterName:
    Description: Name for your ECS cluster.
    Default: JFrog
    Type: String
  CreateNewEcsCluster:
    Description: Choose whether to create a new ECS cluster with the name specified in the 'ClusterName' parameter.
      If you choose Disabled, an ECS cluster with the name specified in the 'CluserName' parameter must already exist.
    AllowedValues:
      - "Enabled"
      - "Disabled"
    Default: "Enabled"
    Type: String
  CreateNewEcsRole:
    Description: Choose whether to create a new ECS role or not. If you choose Disabled, the role
      must exist, and have the proper permissions for the ECS tasks
    AllowedValues:
      - "Enabled"
      - "Disabled"
    Default: Enabled
    Type: String
  RoleName:
    Description: Role name for customized role if you choose Disabled for CreateNewEcsRole.
    Default: MyOwnecsInstanceRole
    Type: String
  RoleArn:
    Description: Role ARN for customized role if you choose Disabled for CreateNewEcsRole.
    Default: arn:aws:iam::1234567890112:role/MyOwnecsInstanceRole
    Type: String
  InstanceType:
    Description: EC2 instance type for the Artifactory Docker hosts.
    AllowedValues:
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5.12xlarge
      - m5.16xlarge
      - m5.24xlarge
      - m5.metal
      - m5d.large
      - m5d.xlarge
      - m5d.2xlarge
      - m5d.4xlarge
      - m5d.8xlarge
      - m5d.12xlarge
      - m5d.16xlarge
      - m5d.24xlarge
      - m5d.metal
      - m5a.large
      - m5a.xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - m5a.8xlarge
      - m5a.12xlarge
      - m5a.16xlarge
      - m5a.24xlarge
    ConstraintDescription: Must contain valid instance type.
    Default: m5.xlarge
    Type: String
  VolumeSize:
    Description: Size in gigabytes of available storage (min 10GB). The Quick Start creates an
      Amazon Elastic Block Store (Amazon EBS) volumes of this size.
    Default: 200
    Type: Number
  # EnableFargate:
  #   Description: AWS Fargate is a technology that you can use with Amazon ECS to run containers without having to manage servers or clusters of Amazon EC2 instances.
  #   Default: "Disabled"
  #   Type: String
  #   AllowedValues: ["Enabled", "Disabled"]
  NumberOfEC2Nodes:
    Description: Number of EC2 nodes to create for the ECS cluster. There must be
      enough nodes to run the number of secondaries plus the primary task.
    AllowedValues:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
    Default: 3
    Type: Number
  NumberOfSecondary:
    Description: Number of secondary Artifactory servers to complete your
      HA deployment. To fit the Artifactory best practices, the minimum number
      is two; the maximum is seven. Do not select more than instances than you
      have licenses for.
    AllowedValues:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
    Default: 2
    Type: Number
  ArtifactoryProduct:
    Description: JFrog Artifactory product you wish to install.
    AllowedValues:
      - JFrog-Artifactory-Pro
      - JFrog-Container-Registry
    Default: JFrog-Artifactory-Pro
    Type: String
  ArtifactoryVersion:
    Description: Version of Artifactory that you want to deploy into the Quick Start.
      Please see the release notes to select the version you want to deploy.
      https://www.jfrog.com/confluence/display/RTF/Release+Notes
    AllowedPattern: ^(([0-9]|[1-9][0-9])\.){2}([1-9][0-9]|[0-9])$
    ConstraintDescription: A version that matches X.X.X per Artifactory releases.
    Default: 7.11.5
    Type: String
  ReleaseStage:
    Description: Whether to use the upstream repository that is pre-GA.
    AllowedValues:
      - "GA"
      - "BETA"
    Default: "GA"
    Type: String
  SmLicenseCertName:
    Description: Secret name created in AWS Secrets Manager that contains the SSL certificate, certificate key, and Artifactory licenses.
    Type: String
  ArtifactoryServerName:
    Description: Name of your Artifactory server. Ensure that this matches your certificate.
    Type: String
  MasterKey:
    Description: Master key for the Artifactory cluster. Generate a master key by using the command '$openssl rand -hex 16'.
    AllowedPattern: ^[a-zA-Z0-9]+$
    MinLength: '1'
    MaxLength: '64'
    ConstraintDescription: Only capital or lowercase letters and numbers, with a Max of 64 characters.
    NoEcho: 'true'
    Type: String
  ExtraJavaOptions:
    Description: Setting Java memory parameters for Artifactory. For more information, see the Artifactory
      system requirements.
      https://www.jfrog.com/confluence/display/RTF/System+Requirements#SystemRequirements-RecommendedHardware.
    Default: -Xss256k -XX:+UseG1GC
    Type: String
  DefaultJavaMemSettings:
    Description: Choose false to overwrite the standard memory-calculation options to pass to the Artifactory JVM.
      If you plan to overwrite them, ensure they are added to the ExtraJavaOptions to prevent the stack provision from failing.
    ConstraintDescription: True or False
    AllowedValues:
      - "true"
      - "false"
    Default: "true"
    Type: String
  AnsibleVaultPass:
    Description: Ansible Vault password to protect the Artifactory YAML configuration file
      generated during the Artifactory deployment. This YAML file is stored on the EC2 nodes
      and secured with this password.
    NoEcho: 'true'
    Type: String
  DatabaseName:
    Description: Name for your database instance. The name must be unique across all database instances
      owned by your AWS account in the current AWS Region. The database instance identifier is case-insensitive,
      but it's stored in lowercase (as in "mydbinstance").
    AllowedPattern: ^[a-zA-Z]([a-zA-Z0-9])+$
    MinLength: '1'
    MaxLength: '60'
    ConstraintDescription: 1 to 60 alphanumeric characters First character must be a letter.
    Default: artdb
    Type: String
  DatabaseEngine:
    Description: The database engine that you want to run.
    AllowedValues:
      - Postgres
    Default: Postgres
    Type: String
  DatabaseUser:
    Description: Login ID for the master user of your database instance.
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: ^[a-zA-Z]([a-zA-Z0-9])+$
    ConstraintDescription: 1 to 16 alphanumeric characters. The First character must be a letter
    Default: artifactory
    Type: String
  DatabasePassword:
    Description: Password for the Artifactory database user.
    AllowedPattern: ^[^ \\']+$
    MinLength: '8'
    MaxLength: '12'
    ConstraintDescription: Must be at least 8 and no more than
      12 characters containing letters and (minimum 1 capital letter), numbers and
      symbols.
    NoEcho: 'true'
    Type: String
  DatabaseInstance:
    Description: Size of the database to be deployed as part of the Quick Start.
    AllowedValues:
      - db.m5.large
      - db.m5.xlarge
      - db.m5.2xlarge
      - db.m5.4xlarge
      - db.m5.12xlarge
      - db.m5.24xlarge
    ConstraintDescription: Must be a valid database Instance Type.
    Default: db.m5.large
    Type: String
  DatabaseAllocatedStorage:
    Description: Size in gigabytes of the available storage for the database instance.
    MinValue: 5
    MaxValue: 1024
    Default: 10
    Type: Number
  MultiAzDatabase:
    Description: Choose false to create an Amazon RDS instance in a single Availability Zone.
    ConstraintDescription: True or False
    AllowedValues:
      - "true"
      - "false"
    Default: "true"
    Type: String
  ElbScheme:
    Description: Choose whether this is internet facing or internal.
    AllowedValues:
      - internal
      - internet-facing
    Default: internet-facing
    Type: String
  QsS3BucketName:
    Description: S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    AllowedPattern: ^[0-9a-z]+([0-9a-z-]*[0-9a-z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Default: aws-quickstart
    Type: String
  QsS3KeyPrefix:
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-jfrog-artifactory/
    Type: String
  QsS3BucketRegion:
    Default: 'us-east-1'
    Description: AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. If you use your own bucket, you must specify your own value.
    Type: String
Conditions:
  CreateEcsCluster: !Equals [!Ref 'CreateNewEcsCluster', 'Enabled']
  EnableBastion: !Equals [!Ref 'ProvisionBastionHost', 'Enabled']
  ArtifactoryHa: !Equals [!Ref ArtifactoryProduct, 'JFrog-Artifactory-Pro']
  DefaultJava: !Equals [!Ref DefaultJavaMemSettings, "true"]
  # FargateEnabled: !Equals [!Ref EnableFargate, "Enabled"]
  UsingDefaultBucket: !Equals [!Ref QsS3BucketName, 'aws-quickstart']
Resources:
  BastionStack:
    Condition: EnableBastion
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QsS3KeyPrefix}submodules/quickstart-linux-bastion/templates/linux-bastion.template
        - S3Bucket: !If [UsingDefaultBucket, !Sub '${QsS3BucketName}-${AWS::Region}', !Ref 'QsS3BucketName']
          S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref 'QsS3BucketRegion']
      Parameters:
        VPCID: !Ref VpcId
        PublicSubnet1ID: !Ref PublicSubnet1Id
        PublicSubnet2ID: !Ref PublicSubnet2Id
        KeyPairName: !Ref KeyPairName
        QSS3BucketName: !Ref QsS3BucketName
        QSS3KeyPrefix: !Sub '${QsS3KeyPrefix}submodules/quickstart-linux-bastion/'
        QSS3BucketRegion: !Ref QsS3BucketRegion
        RemoteAccessCIDR: !Ref RemoteAccessCidr
        BastionInstanceType: !Ref BastionInstanceType
        RootVolumeSize: !Ref BastionRootVolumeSize
        BastionAMIOS: !Ref BastionOs
        EnableTCPForwarding: !Ref BastionEnableTcpForwarding
        EnableX11Forwarding: !Ref BastionEnableX11Forwarding
        NumBastionHosts: !Ref NumBastionHosts

  ArtifactoryS3IAMUser:
    Type: AWS::IAM::User
  ArtifactoryIamAcessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref ArtifactoryS3IAMUser

  ArtifactoryCoreInfraStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QsS3KeyPrefix}templates/jfrog-artifactory-core-infrastructure.template.yaml
        - S3Bucket: !If [UsingDefaultBucket, !Sub '${QsS3BucketName}-${AWS::Region}', !Ref 'QsS3BucketName']
          S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref 'QsS3BucketRegion']
      Parameters:
        VpcId: !Ref VpcId
        VpcCidr: !Ref VpcCidr
        PrivateSubnet1Cidr: !Ref PrivateSubnet1Cidr
        PrivateSubnet2Cidr: !Ref PrivateSubnet2Cidr
        PrivateSubnet3Cidr: !Ref PrivateSubnet2Cidr  # This should end up in no new rule but required for EKS
        SubnetIds: !Join [",", [!Ref PrivateSubnet1Id, !Ref PrivateSubnet2Id]]
        DatabaseAllocatedStorage: !Ref DatabaseAllocatedStorage
        MultiAzDatabase: !Ref MultiAzDatabase
        DatabaseEngine: !Ref DatabaseEngine
        DatabaseUser: !Ref DatabaseUser
        DatabasePassword: !Ref DatabasePassword
        DatabaseInstance: !Ref DatabaseInstance
        DatabaseName: !Ref DatabaseName
        ArtifactoryProduct: !Ref ArtifactoryProduct
        ReleaseStage: !Ref ReleaseStage
        ArtifactoryS3IAMUser: !Ref ArtifactoryS3IAMUser
        InstanceType: !Ref InstanceType
  ArtifactoryElb:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Name: !Sub ${ArtifactoryProduct}-ECS-ELB
      Scheme: !Ref ElbScheme
      Subnets:
        - !Ref PublicSubnet1Id
        - !Ref PublicSubnet2Id
      Type: network
  ArtifactorySslTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: True
      HealthCheckIntervalSeconds: 30
      HealthCheckProtocol: TCP
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 3
      Port: 443
      Protocol: TCP
      TargetType: "instance" # !If [FargateEnabled, "ip", "instance"]
      UnhealthyThresholdCount: 3
      VpcId: !Ref VpcId
  ArtifactoryTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: True
      HealthCheckIntervalSeconds: 30
      HealthCheckProtocol: TCP
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 3
      Port: 80
      Protocol: TCP
      TargetType: "instance" # !If [FargateEnabled, "ip", "instance"]
      UnhealthyThresholdCount: 3
      VpcId: !Ref VpcId
  ArtifactorySslElbListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref ArtifactorySslTargetGroup
          Type: forward
      LoadBalancerArn: !Ref ArtifactoryElb
      Port: 443
      Protocol: TCP
  ArtifactoryElbListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref ArtifactoryTargetGroup
          Type: forward
      LoadBalancerArn: !Ref ArtifactoryElb
      Port: 80
      Protocol: TCP
  ArtifactoryEc2Sg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${ArtifactoryProduct}-ec2-instances-sg
      GroupDescription: SG for EC2 instances (also permits SSH access from the bastion host)
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref VpcCidr
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref VpcCidr
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref AccessCidr
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref VpcCidr
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref AccessCidr
        - IpProtocol: tcp
          FromPort: 8081
          ToPort: 8082
          CidrIp: !Ref PrivateSubnet1Cidr
        - IpProtocol: tcp
          FromPort: 8081
          ToPort: 8082
          CidrIp: !Ref PrivateSubnet2Cidr
      SecurityGroupEgress:
        - IpProtocol: "-1"
          CidrIp: 0.0.0.0/0
  EcsCluster:
    Condition: CreateEcsCluster
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Ref ClusterName
  ArtifactoryECSBuild:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QsS3KeyPrefix}templates/jfrog-artifactory-ecs-ec2.template.yaml
        - S3Bucket: !If [UsingDefaultBucket, !Sub '${QsS3BucketName}-${AWS::Region}', !Ref 'QsS3BucketName']
          S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref 'QsS3BucketRegion']
      Parameters:
        PrivateSubnet1Id: !Ref PrivateSubnet1Id
        PrivateSubnet2Id: !Ref PrivateSubnet2Id
        ClusterName: !If [CreateEcsCluster, !Ref EcsCluster, !Ref ClusterName]
        CreateNewEcsRole: !Ref CreateNewEcsRole
        RoleName: !Ref RoleName
        RoleArn: !Ref RoleArn
        MinScalingNodes: !Ref NumberOfEC2Nodes
        MaxScalingNodes: !Ref NumberOfEC2Nodes
        KeyPairName: !Ref KeyPairName
        InstanceType: !Ref InstanceType
        VolumeSize: !Ref VolumeSize
        EnableFargate: "Disabled" # !Ref EnableFargate
        DeploymentTag: !If [ArtifactoryHa, ArtifactoryEcs-Node, JcrEcs-Node]
        NumberOfSecondary: !Ref NumberOfSecondary
        DeploymentSize: !GetAtt ArtifactoryCoreInfraStack.Outputs.DeploymentSize
        ArtifactoryProduct: !Ref ArtifactoryProduct
        ArtifactoryLicense1: !If [ArtifactoryHa, !Sub '{{resolve:secretsmanager:${SmLicenseCertName}:SecretString:ArtifactoryLicense1}}', '']
        ArtifactoryLicense2: !If [ArtifactoryHa, !Sub '{{resolve:secretsmanager:${SmLicenseCertName}:SecretString:ArtifactoryLicense2}}', '']
        ArtifactoryLicense3: !If [ArtifactoryHa, !Sub '{{resolve:secretsmanager:${SmLicenseCertName}:SecretString:ArtifactoryLicense3}}', '']
        ArtifactoryLicense4: !If [ArtifactoryHa, !Sub '{{resolve:secretsmanager:${SmLicenseCertName}:SecretString:ArtifactoryLicense4}}', '']
        Certificate: !Sub '{{resolve:secretsmanager:${SmLicenseCertName}:SecretString:Certificate}}'
        CertificateKey: !Sub '{{resolve:secretsmanager:${SmLicenseCertName}:SecretString:CertificateKey}}'
        CertificateDomain: !Sub '{{resolve:secretsmanager:${SmLicenseCertName}:SecretString:CertificateDomain}}'
        ArtifactoryServerName: !Ref ArtifactoryServerName
        ArtifactoryIamAcessKey: !Ref ArtifactoryIamAcessKey
        SecretAccessKey: !GetAtt ArtifactoryIamAcessKey.SecretAccessKey
        ArtifactoryS3Bucket: !GetAtt ArtifactoryCoreInfraStack.Outputs.S3Bucket
        DatabaseUrl: !GetAtt ArtifactoryCoreInfraStack.Outputs.DatabaseUrl
        DatabaseDriver: !GetAtt ArtifactoryCoreInfraStack.Outputs.DatabaseDriver
        ProDockerRepo: !GetAtt ArtifactoryCoreInfraStack.Outputs.ProDockerRepo
        NginxDockerRepo: !GetAtt ArtifactoryCoreInfraStack.Outputs.NginxDockerRepo
        DatabasePlugin: !GetAtt ArtifactoryCoreInfraStack.Outputs.DatabasePlugin
        DatabasePluginUrl: !GetAtt ArtifactoryCoreInfraStack.Outputs.DatabasePluginUrl
        DatabaseType: !GetAtt ArtifactoryCoreInfraStack.Outputs.DatabaseType
        DatabaseUser: !Ref DatabaseUser
        DatabasePassword: !Ref DatabasePassword
        MasterKey: !Ref MasterKey
        ExtraJavaOptions: !If [DefaultJava, !Sub "${ArtifactoryCoreInfraStack.Outputs.JavaOpts} ${ExtraJavaOptions}", !Ref ExtraJavaOptions]
        ArtifactoryVersion: !Ref ArtifactoryVersion
        SecurityGroups: !Ref ArtifactoryEc2Sg
        ArtifactoryTargetGroupArn: !Ref ArtifactoryTargetGroup
        ArtifactorySslTargetGroupArn: !Ref ArtifactorySslTargetGroup
        AnsibleVaultPass: !Ref AnsibleVaultPass
        QsS3BucketName: !Ref QsS3BucketName
        QsS3KeyPrefix: !Ref QsS3KeyPrefix
        QsS3BucketRegion: !Ref QsS3BucketRegion
        QsS3Uri: !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QsS3KeyPrefix}
          - S3Bucket: !If
              - UsingDefaultBucket
              - !Sub 'aws-quickstart-${AWS::Region}'
              - !Ref 'QsS3BucketName'
            S3Region: !If
              - UsingDefaultBucket
              - !Ref 'AWS::Region'
              - !Ref 'QsS3BucketRegion'

Outputs:
  ArtifactoryUrl:
    Description: URL of the ELB to access Artifactory
    Value: !Sub "https://${ArtifactoryElb.DNSName}"
  BastionIp:
    Value: !If
      - EnableBastion
      - !GetAtt BastionStack.Outputs.EIP1
      - ""
