{% if artifactory_major_verion|int == 7 %}
<!-- AWS S3 V3 -->
<config version="2">
    <chain template="cluster-s3-storage-v3">
        <provider id="cache-fs-eventual-s3" type="cache-fs">
            <provider id="sharding-cluster-eventual-s3" type="sharding-cluster">
                <sub-provider id="eventual-cluster-s3" type="eventual-cluster">
                    <provider id="retry-s3" type="retry">
                        <provider id="s3-storage-v3" type="s3-storage-v3"/>
                    </provider>
                </sub-provider>
                <dynamic-provider id="remote-s3" type="remote"/>
            </provider>
        </provider>
    </chain>

    <provider id="sharding-cluster-eventual-s3" type="sharding-cluster">
        <readBehavior>crossNetworkStrategy</readBehavior>
        <writeBehavior>crossNetworkStrategy</writeBehavior>
        <redundancy>2</redundancy>
        <property name="zones" value="local,remote"/>
    </provider>

    <provider id="remote-s3" type="remote">
        <zone>remote</zone>
    </provider>

    <provider id="eventual-cluster-s3" type="eventual-cluster">
        <zone>local</zone>
    </provider>

    <!-- Set max cache-fs size -->
    <provider id="cache-fs-eventual-s3" type="cache-fs">
        <maxCacheSize>5e+10</maxCacheSize>
        <cacheProviderDir>cache</cacheProviderDir>
    </provider>
    <provider id="s3-storage-v3" type="s3-storage-v3">
        <testConnection>false</testConnection>
        <identity>{{ s3_access_key }}</identity>
        <credential>{{ s3_access_secret_key }}</credential>
        <region>{{ s3_region }}</region>
        <bucketName>{{ s3_bucket }}</bucketName>
        <path>artifactory/filestore</path>
        <endpoint></endpoint>
        <useInstanceCredentials>false</useInstanceCredentials>
        <usePresigning>false</usePresigning>
        <signatureExpirySeconds>300</signatureExpirySeconds>
    </provider>
</config>
{% elif artifactory_major_verion|int == 6 %}
<config version="2">
    <chain> <!--template="cluster-s3-storage-v3"-->
        <provider id="cache-fs-eventual-s3" type="cache-fs">
            <provider id="sharding-cluster-eventual-s3" type="sharding-cluster">
                <sub-provider id="eventual-cluster-s3" type="eventual-cluster">
                    <provider id="retry-s3" type="retry">
                        <provider id="s3-storage-v3" type="s3-storage-v3"/>
                    </provider>
                </sub-provider>
                <dynamic-provider id="remote-s3" type="remote"/>
            </provider>
        </provider>
    </chain>

    <provider id="sharding-cluster-eventual-s3" type="sharding-cluster">
        <readBehavior>crossNetworkStrategy</readBehavior>
        <writeBehavior>crossNetworkStrategy</writeBehavior>
        <redundancy>2</redundancy>
        <property name="zones" value="local,remote"/>
    </provider>

    <provider id="remote-s3" type="remote">
        <zone>remote</zone>
    </provider>

    <provider id="eventual-cluster-s3" type="eventual-cluster">
        <zone>local</zone>
    </provider>

    <!-- Set max cache-fs size -->
    <provider id="cache-fs-eventual-s3" type="cache-fs">
        <maxCacheSize>5e+10</maxCacheSize>
        <cacheProviderDir>cache</cacheProviderDir>
    </provider>
    <provider id="s3-storage-v3" type="s3-storage-v3">
        <testConnection>false</testConnection>
        <identity>{{ s3_access_key }}</identity>
        <credential>{{ s3_access_secret_key }}</credential>
        <region>{{ s3_region }}</region>
        <bucketName>{{ s3_bucket }}</bucketName>
        <path>artifactory/filestore</path>
        <endpoint></endpoint>
        <useInstanceCredentials>false</useInstanceCredentials>
        <usePresigning>false</usePresigning>
        <signatureExpirySeconds>300</signatureExpirySeconds>
    </provider>
</config>
{% endif %}
